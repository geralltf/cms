/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as e from "react";
import l from "prop-types";
import { validatePackage as q, getTabIndex as D, classNames as b } from "@progress/kendo-react-common";
import { ButtonGroup as K, Button as u } from "@progress/kendo-react-buttons";
import { dropletSliderIcon as _, paletteIcon as j, dropletSlashIcon as J } from "@progress/kendo-svg-icons";
import { ColorPalette as O } from "./ColorPalette.mjs";
import { ColorGradient as Q } from "./ColorGradient.mjs";
import { packageMetadata as U } from "../package-metadata.mjs";
import { useLocalization as W } from "@progress/kendo-react-intl";
import { flatColorPickerColorGradientBtn as N, messages as m, flatColorPickerColorPaletteBtn as B, flatColorPickerClearBtn as I, flatColorPickerCancelBtn as X, flatColorPickerApplyBtn as Y } from "../messages/index.mjs";
const L = e.forwardRef((a, G) => {
  q(U);
  const v = e.useRef(null), s = e.useRef(null), S = e.useRef(null), { defaultValue: n, showButtons: C = !0, showPreview: x = !0, showClearButton: R = !0 } = a, [c, F] = e.useState((a.view || "ColorGradient") === "ColorGradient"), [o, d] = e.useState(a.value || n || void 0), [r, k] = e.useState(a.value || n || void 0), f = a.value !== void 0 ? a.value : void 0;
  e.useEffect(() => {
    d(a.value);
  }, [a.value]);
  const g = W(), h = e.useCallback(
    () => {
      v.current && v.current.focus();
    },
    [v]
  );
  e.useImperativeHandle(v, () => ({
    element: s.current,
    focus: h,
    props: a,
    value: f
  }), [f, h, a]), e.useImperativeHandle(G, () => v.current);
  const E = e.useCallback(
    (t) => {
      (t === "ColorGradient" && !c || t === "ColorPalette" && c) && F(!c);
    },
    [c]
  ), V = e.useCallback(
    (t) => {
      if (n ? (d(n), k(n)) : (d(void 0), k(void 0)), a.onPreviewChange) {
        const i = {
          value: n || void 0,
          nativeEvent: t.nativeEvent,
          syntheticEvent: t
        };
        a.onPreviewChange.call(void 0, i);
      }
    },
    [n, a.onPreviewChange]
  ), y = e.useCallback(
    (t) => {
      if (d(t.value), a.onPreviewChange) {
        const i = {
          value: t.value,
          nativeEvent: t.nativeEvent,
          syntheticEvent: t.syntheticEvent
        };
        a.onPreviewChange.call(void 0, i);
      }
    },
    [a.onPreviewChange]
  ), T = e.useCallback(
    (t) => {
      if (o !== void 0 && k(o), a.onChange) {
        const i = {
          value: o,
          nativeEvent: t.nativeEvent,
          syntheticEvent: t
        };
        a.onChange.call(void 0, i);
      }
    },
    [o, a.onChange]
  ), M = e.useCallback(
    () => {
      d(r);
    },
    [r]
  ), z = e.useCallback(
    (t) => {
      if (d(r), a.onPreviewChange) {
        const i = {
          value: r,
          nativeEvent: t.nativeEvent,
          syntheticEvent: t
        };
        a.onPreviewChange.call(void 0, i);
      }
    },
    [r, a.onPreviewChange]
  ), w = e.useCallback(
    (t) => {
      s.current && !(t.nativeEvent.target instanceof HTMLInputElement) && s.current.focus();
    },
    [s]
  ), H = e.useCallback(
    (t) => {
      var P;
      if ((!t.relatedTarget || !((P = s.current) != null && P.contains(t.relatedTarget))) && (!C && o !== void 0 && k(o), !C && a.onChange)) {
        const A = {
          value: o,
          nativeEvent: t.nativeEvent,
          syntheticEvent: t
        };
        a.onChange.call(void 0, A);
      }
    },
    [o, C, a.onChange]
  );
  return /* @__PURE__ */ e.createElement(
    "div",
    {
      id: a.id,
      role: "textbox",
      "aria-label": a.ariaLabel,
      "aria-labelledby": a.ariaLabelledBy,
      "aria-disabled": a.disabled ? "true" : void 0,
      style: a.style,
      ref: s,
      tabIndex: D(a.tabIndex, a.disabled),
      className: b(
        "k-flatcolorpicker k-coloreditor",
        {
          "k-disabled": a.disabled
        },
        a.className
      ),
      onBlur: H
    },
    /* @__PURE__ */ e.createElement(e.Fragment, null, a.header || /* @__PURE__ */ e.createElement("div", { className: "k-coloreditor-header k-hstack" }, /* @__PURE__ */ e.createElement("div", { className: "k-coloreditor-header-actions k-hstack" }, /* @__PURE__ */ e.createElement(K, { className: "k-button-group-flat" }, /* @__PURE__ */ e.createElement(
      u,
      {
        type: "button",
        "aria-label": g.toLanguageString(
          N,
          m[N]
        ),
        togglable: !0,
        fillMode: "flat",
        selected: c,
        onClick: () => E("ColorGradient"),
        icon: "droplet-slider",
        svgIcon: _
      }
    ), /* @__PURE__ */ e.createElement(
      u,
      {
        type: "button",
        "aria-label": g.toLanguageString(
          B,
          m[B]
        ),
        togglable: !0,
        fillMode: "flat",
        selected: !c,
        onClick: () => E("ColorPalette"),
        icon: "palette",
        svgIcon: j
      }
    ))), /* @__PURE__ */ e.createElement("div", { className: "k-spacer" }), /* @__PURE__ */ e.createElement("div", { className: "k-coloreditor-header-actions k-hstack" }, R && /* @__PURE__ */ e.createElement(
      u,
      {
        type: "button",
        fillMode: "flat",
        onClick: V,
        "aria-label": g.toLanguageString(
          I,
          m[I]
        ),
        icon: "droplet-slash",
        svgIcon: J
      }
    ), x && /* @__PURE__ */ e.createElement("div", { className: "k-coloreditor-preview k-vstack" }, /* @__PURE__ */ e.createElement("span", { className: b("k-coloreditor-preview-color", "k-color-preview", { "k-no-color": f === void 0 }) }, /* @__PURE__ */ e.createElement("span", { className: "k-color-preview-mask", style: { background: o || void 0 } })), /* @__PURE__ */ e.createElement("span", { className: b("k-coloreditor-current-color", "k-color-preview", { "k-no-color": r === void 0 }), onClick: z }, /* @__PURE__ */ e.createElement("span", { className: "k-color-preview-mask", style: { background: r || void 0 } }))))), /* @__PURE__ */ e.createElement("div", { className: "k-coloreditor-views k-vstack" }, c ? /* @__PURE__ */ e.createElement(
      Q,
      {
        ref: S,
        role: "none",
        tabIndex: -1,
        ariaLabel: void 0,
        value: o,
        onChange: y,
        onFocus: w,
        opacity: a.opacity,
        format: a.format
      }
    ) : /* @__PURE__ */ e.createElement(O, { ariaDisabled: !0, ariaLabelledBy: "required_label", value: o, onChange: y, onFocus: w })), C && /* @__PURE__ */ e.createElement("div", { className: "k-coloreditor-footer k-actions k-actions-end k-actions-horizontal" }, /* @__PURE__ */ e.createElement(u, { type: "button", className: "k-coloreditor-cancel", onClick: M }, m[X]), /* @__PURE__ */ e.createElement(u, { type: "button", themeColor: "primary", className: "k-coloreditor-apply", onClick: T }, m[Y])))
  );
}), Z = {
  id: l.string,
  style: l.any,
  className: l.string,
  value: l.string,
  defaultValue: l.string,
  onPreviewChange: l.func,
  onChange: l.func,
  opacity: l.bool,
  format: l.any,
  tabIndex: l.number,
  ariaLabel: l.string,
  ariaLabelledBy: l.string,
  disabled: l.bool,
  view: l.any,
  header: l.any,
  showClearButton: l.bool,
  showPreview: l.bool,
  showButtons: l.bool
};
L.displayName = "KendoFlatColorPicker";
L.propTypes = Z;
export {
  L as FlatColorPicker
};
