/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import { Keys as a, treeIdUtils as n, isEnabledAndAllParentsEnabled as E, isItemExpandedAndWithChildren as c } from "@progress/kendo-react-common";
function F(o, e, t, g, r) {
  switch (g) {
    case a.left:
      return I();
    case a.right:
      return l();
    case a.up:
      return s();
    case a.down:
      return y();
    case a.home:
      return n.ZERO_LEVEL_ZERO_NODE_ID;
    case a.end:
      return C();
    default:
      return e;
  }
  function I() {
    return n.isIdZeroLevel(e) || r.expanded(o) && E(e, t, r) ? e : n.getDirectParentId(e);
  }
  function l() {
    return c(o, r) ? n.getFirstChildId(e) : e;
  }
  function s() {
    const d = Number(n.getShortId(e)), u = n.getDirectParentId(e);
    return d ? i(n.createId(d - 1, u), t, r) : n.isIdZeroLevel(e) ? e : u;
  }
  function y() {
    return c(o, r) ? n.getFirstChildId(e) : p(e, t, r) || e;
  }
  function C() {
    let d = (t.length - 1).toString(), u = t[t.length - 1], h;
    for (; c(u, r); )
      h = u[r.getChildrenField()], d = n.createId(h.length - 1, d), u = h[h.length - 1];
    return d;
  }
}
function p(o, e, t) {
  const g = n.getDirectParentId(o), r = g ? n.getItemById(g, e, t.getChildrenField()) : void 0, I = r ? r[t.getChildrenField()] : e, l = Number(n.getShortId(o));
  return l < I.length - 1 ? n.createId(l + 1, g) : r ? p(g, e, t) : void 0;
}
function i(o, e, t) {
  const g = n.getItemById(o, e, t.getChildrenField());
  return c(g, t) ? i(n.createId(g[t.getChildrenField()].length - 1, o), e, t) : o;
}
export {
  F as default
};
