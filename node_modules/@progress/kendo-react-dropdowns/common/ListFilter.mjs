/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as n from "react";
import e from "prop-types";
import { TextBox as f, InputPrefix as d, InputSeparator as p } from "@progress/kendo-react-inputs";
import { searchIcon as x } from "@progress/kendo-svg-icons";
import { IconWrap as b } from "@progress/kendo-react-common";
const t = n.forwardRef((r, o) => {
  const l = n.useRef(null), { renderListFilterWrapper: i = !1, renderPrefixSeparator: s = !1, ...m } = r;
  n.useImperativeHandle(
    o,
    () => l.current
  );
  const u = () => /* @__PURE__ */ n.createElement(n.Fragment, null, /* @__PURE__ */ n.createElement(d, null, /* @__PURE__ */ n.createElement(b, { name: "search", icon: x, className: "k-input-icon" })), s && /* @__PURE__ */ n.createElement(p, null)), a = /* @__PURE__ */ n.createElement(
    f,
    {
      ...m,
      ref: l,
      className: "k-searchbox",
      value: r.value || "",
      onChange: r.onChange,
      onKeyDown: r.onKeyDown,
      tabIndex: r.tabIndex,
      onClick: (c) => c.stopPropagation(),
      size: r.size,
      fillMode: r.fillMode,
      rounded: r.rounded,
      prefix: u
    }
  );
  return i ? /* @__PURE__ */ n.createElement("div", { className: "k-list-filter" }, " ", a, " ") : a;
});
t.propTypes = {
  value: e.oneOfType([e.string, e.number, e.array]),
  tabIndex: e.number,
  onChange: e.func,
  onKeyDown: e.func,
  size: e.oneOf([null, "small", "medium", "large"]),
  rounded: e.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: e.oneOf([null, "solid", "flat", "outline"]),
  renderListFilterWrapper: e.bool,
  renderPrefixSeparator: e.bool
};
t.displayName = "KendoReactListFilter";
const E = t;
export {
  E as default
};
