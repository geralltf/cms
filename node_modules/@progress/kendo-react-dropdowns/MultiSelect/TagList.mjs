/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as t from "react";
import { Chip as d } from "@progress/kendo-react-buttons";
const v = (o) => o.syntheticEvent.preventDefault(), f = (o) => o.syntheticEvent.stopPropagation();
class g extends t.Component {
  render() {
    const { data: n, guid: s, focused: r, tagRender: c, tag: i, onTagDelete: l, size: m } = this.props;
    return /* @__PURE__ */ t.createElement(t.Fragment, null, n.map((e, p) => {
      const a = i ? /* @__PURE__ */ t.createElement(
        i,
        {
          key: e.text + p,
          tagData: e,
          guid: s,
          focusedTag: r,
          onTagDelete: l
        }
      ) : /* @__PURE__ */ t.createElement(
        d,
        {
          id: `tag-${s}-${e.text.replace(/\s+/g, "-")}`,
          "aria-selected": !0,
          role: "option",
          "aria-setsize": n.length,
          key: e.text + p,
          text: e.text,
          removable: !0,
          onRemove: (u) => l.call(void 0, e.data, u.syntheticEvent),
          onMouseDown: v,
          onClick: f,
          className: e === r ? "k-focus" : void 0,
          size: m
        }
      );
      return c ? c(e, a) : a;
    }), this.props.children);
  }
}
export {
  g as default
};
