/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as t from "react";
import n from "prop-types";
import { createPropsContext as Xe, validatePackage as Ye, usePropsContext as Ze, useId as et, getTabIndex as tt, useRtl as nt, canUseDOM as at, Keys as c, noop as U, mapTree as ot, extendDataItem as rt, classNames as oe, IconWrap as we, kendoThemeMaps as it } from "@progress/kendo-react-common";
import { Popup as lt } from "@progress/kendo-react-popup";
import { useLocalization as st } from "@progress/kendo-react-intl";
import { TreeView as Fe } from "@progress/kendo-react-treeview";
import { packageMetadata as ct } from "../package-metadata.mjs";
import { getItemValue as ut, areSame as De, isPresent as dt } from "../common/utils.mjs";
import { useDropdownWidth as pt } from "./useDropdownWidth.mjs";
import { ListNoData as ft } from "./ListNoData.mjs";
import { clear as Ie, messages as re, nodata as j } from "../messages/index.mjs";
import { FloatingLabel as mt } from "@progress/kendo-react-labels";
import Se from "../common/ListFilter.mjs";
import { Button as vt } from "@progress/kendo-react-buttons";
import { xIcon as gt, caretAltDownIcon as bt } from "@progress/kendo-svg-icons";
import { AdaptiveMode as ht } from "../common/AdaptiveMode.mjs";
import { ActionSheetContent as yt } from "@progress/kendo-react-layout";
import { MOBILE_MEDIUM_DEVISE as Et } from "../common/constants.mjs";
const { sizeMap: Ct, roundedMap: kt } = it, xt = "Please select a value from the list!", wt = (E) => /* @__PURE__ */ t.createElement("span", { className: "k-input-value-text" }, E.children), Me = (E) => E.split("_").map((D) => parseInt(D, 10)), Ft = (E, D) => {
  const { validationMessage: r, valid: o, required: G } = E;
  return {
    customError: r !== void 0,
    valid: !!(o !== void 0 ? o : !G || D),
    valueMissing: !D
  };
}, ie = {
  selectField: "selected",
  subItemsField: "items",
  popupSettings: {
    animate: !0,
    width: "200px",
    height: "200px"
  },
  data: [],
  required: !1,
  style: {},
  validityStyles: !0,
  size: "medium",
  rounded: "medium",
  fillMode: "solid"
}, Dt = Xe(), Re = t.forwardRef((E, D) => {
  Ye(ct);
  const r = Ze(Dt, E), o = {
    ...ie,
    ...r
  }, G = et(), le = o.id || G, {
    data: T,
    dataItemKey: N,
    popupSettings: b = {},
    style: P,
    opened: u,
    disabled: I,
    onOpen: V = U,
    onClose: f = U,
    placeholder: J,
    label: O,
    name: Te,
    selectField: z,
    subItemsField: K,
    validationMessage: H,
    valid: Ne,
    required: Q,
    validityStyles: Pe
  } = o, X = tt(o.tabIndex, I), i = t.useRef(null), m = t.useRef(null), S = t.useRef(null), Y = t.useRef(null), _ = t.useRef(null), h = t.useRef(null), $ = t.useRef(!1), [se, Ve] = t.useState(void 0), C = o.value !== void 0, v = C ? o.value : se !== void 0 ? se : o.defaultValue, L = dt(v), Z = L ? ut(v, o.textField) : "", ee = Ft({ validationMessage: H, valid: Ne, required: Q }, L), Oe = t.useCallback(() => m.current && m.current.focus(), []);
  t.useImperativeHandle(
    i,
    () => ({
      props: o,
      element: m.current,
      focus: Oe
    })
  ), t.useImperativeHandle(D, () => i.current);
  const k = nt(m, o.dir), Ke = {
    width: pt(m, ie, { ...ie.popupSettings, ...b }, P),
    ...k !== void 0 ? { direction: k } : {}
  }, [Le, ce] = t.useState(!1), l = u !== void 0 ? u : Le, [d, te] = t.useState(!1), [ne, Be] = t.useState(), x = !!(ne && ne <= Et && o.adaptive), [ue, We] = t.useState(""), qe = t.useCallback(
    () => {
      _.current && _.current.setCustomValidity && _.current.setCustomValidity(
        ee.valid ? "" : H === void 0 ? xt : H
      );
    },
    [H, ee]
  );
  t.useEffect(qe), t.useEffect(() => {
    const e = at && window.ResizeObserver && new window.ResizeObserver(Je.bind(void 0));
    return document != null && document.body && e && e.observe(document.body), () => {
      document != null && document.body && e && e.disconnect();
    };
  }, []);
  const de = t.useCallback(
    (e) => {
      if (!l) {
        if (V) {
          const a = { ...e };
          V.call(void 0, a);
        }
        u === void 0 && ce(!0);
      }
    },
    [l, u, V]
  ), w = t.useCallback(
    (e) => {
      if (l) {
        if (f) {
          const a = { ...e };
          f.call(void 0, a);
        }
        u === void 0 && (ce(!1), x && setTimeout(() => {
          var a;
          g((a = Y.current) == null ? void 0 : a.element);
        }, 300));
      }
    },
    [l, u, f, x]
  ), Ae = t.useCallback(
    (e) => {
      if (!e.isDefaultPrevented() && i.current) {
        te(!0);
        const a = {
          syntheticEvent: e,
          nativeEvent: e.nativeEvent,
          target: i.current
        };
        (l ? w : de)(a);
      }
    },
    [l, u, V, f]
  ), M = t.useCallback(
    (e) => {
      $.current = !0, e(), window.setTimeout(() => $.current = !1, 0);
    },
    []
  ), ze = t.useCallback(
    (e) => {
      var F, ke;
      const { keyCode: a, altKey: s } = e, p = h.current && h.current.element;
      if (!i.current || e.isDefaultPrevented() && ((F = S.current) == null ? void 0 : F.element) === e.target)
        return;
      const R = {
        syntheticEvent: e,
        nativeEvent: e.nativeEvent,
        target: i.current
      };
      if (l)
        if (a === c.esc || s && a === c.up)
          e.preventDefault(), w(R);
        else if (p && p.querySelector(".k-focus") && (a === c.up || a === c.down || a === c.left || a === c.right || a === c.home || a === c.end)) {
          if (a === c.up && ((ke = S.current) != null && ke.element)) {
            const q = Array.from(p.querySelectorAll(".k-treeview-item")), xe = [...q].reverse().find((A) => !!(A && A.querySelector(".k-focus")));
            if (xe && q.indexOf(xe) === 0)
              return M(() => {
                var A;
                g((A = S.current) == null ? void 0 : A.element);
              });
          }
          M(U);
        } else
          a === c.down && M(() => {
            var q;
            g(((q = S.current) == null ? void 0 : q.element) || p);
          });
      else
        s && a === c.down ? (e.preventDefault(), de(R)) : l || a === c.esc && ve(e);
    },
    [l, u, V, f]
  ), pe = t.useCallback(
    (e) => {
      const { keyCode: a, altKey: s } = e;
      s || a !== c.up && a !== c.down || (e.preventDefault(), M(
        a === c.up ? () => {
          g(m.current);
        } : () => {
          g(h.current && h.current.element);
        }
      ));
    },
    []
  ), g = t.useCallback(
    (e) => {
      e && M(() => e.focus());
    },
    []
  ), He = t.useCallback(
    () => {
      var e;
      !d && l && !u ? w({ target: i.current }) : r.filterable ? g((e = S.current) == null ? void 0 : e.element) : g(h.current && h.current.element);
    },
    [f, r.filterable, d, u, l]
  ), _e = t.useCallback(
    () => {
      d && g(m.current);
    },
    [d]
  ), $e = t.useCallback(
    (e) => {
      if (!d && !$.current && (te(!0), r.onFocus && i.current)) {
        const a = {
          syntheticEvent: e,
          nativeEvent: e.nativeEvent,
          target: i.current
        };
        r.onFocus.call(void 0, a);
      }
    },
    [d, r.onFocus]
  ), Ue = t.useCallback(
    (e) => {
      if (d && !$.current && i.current) {
        te(!1);
        const a = {
          syntheticEvent: e,
          nativeEvent: e.nativeEvent,
          target: i.current
        };
        if (r.onBlur) {
          const s = { ...a };
          r.onBlur.call(void 0, s);
        }
        x || w(a);
      }
    },
    [d, r.onBlur, l, u, f]
  ), je = t.useCallback(
    () => {
      d && M(U), x && setTimeout(() => {
        var e;
        g((e = Y.current) == null ? void 0 : e.element);
      }, 300);
    },
    [d, x]
  ), fe = t.useCallback(
    (e, a, s) => {
      if (r.onChange) {
        const p = {
          value: a,
          level: s ? Me(s) : [],
          ...e
        };
        r.onChange.call(void 0, p);
      }
      C || Ve(a);
    },
    [r.onChange, C]
  ), me = t.useCallback(
    (e) => {
      if (De(e.item, v, N) || !i.current)
        return;
      const { item: a, itemHierarchicalIndex: s, nativeEvent: p, syntheticEvent: R } = e, F = {
        syntheticEvent: R,
        nativeEvent: p,
        target: i.current
      };
      fe(F, a, s), w(F);
    },
    [C, v, r.onChange, N, l, u, f]
  ), ve = t.useCallback(
    (e) => {
      if (!i.current)
        return;
      const a = {
        syntheticEvent: e,
        nativeEvent: e.nativeEvent,
        target: i.current
      };
      fe(a, null), w(a), e.preventDefault();
    },
    [C, r.onChange, l, u, f]
  ), ge = t.useCallback(
    (e) => {
      if (e.syntheticEvent.stopPropagation(), r.onExpandChange && i.current) {
        const { item: a, itemHierarchicalIndex: s, nativeEvent: p, syntheticEvent: R } = e, F = {
          level: Me(s),
          item: a,
          nativeEvent: p,
          syntheticEvent: R,
          target: i.current
        };
        r.onExpandChange.call(void 0, F);
      }
    },
    [r.onExpandChange]
  ), be = t.useCallback(
    (e) => {
      if (r.onFilterChange && i.current) {
        const s = {
          filter: { field: r.textField, operator: "contains", value: e.target.value },
          syntheticEvent: e.syntheticEvent,
          nativeEvent: e.nativeEvent,
          target: i.current
        };
        r.onFilterChange.call(void 0, s), r.filter === void 0 && We(e.target.value);
      }
    },
    [r.onFilterChange, r.filter, r.textField]
  ), Ge = () => {
    const e = o.filterable ? /* @__PURE__ */ t.createElement(
      Se,
      {
        value: o.filter === void 0 ? ue : o.filter,
        ref: Y,
        onChange: be,
        onKeyDown: pe,
        size: y,
        rounded: B,
        fillMode: W
      }
    ) : null, a = {
      adaptiveTitle: o.adaptiveTitle,
      expand: l,
      onClose: (s) => w(s),
      windowWidth: ne,
      mobileFilter: e
    };
    return /* @__PURE__ */ t.createElement(ht, { ...a }, /* @__PURE__ */ t.createElement(yt, { className: "!k-overflow-hidden" }, /* @__PURE__ */ t.createElement("div", { className: "k-list-container" }, /* @__PURE__ */ t.createElement("div", { className: "k-list k-list-lg" }, T.length > 0 ? /* @__PURE__ */ t.createElement(
      Fe,
      {
        ref: h,
        tabIndex: X,
        data: he,
        focusIdField: N,
        textField: o.textField,
        selectField: z,
        expandField: o.expandField,
        childrenField: K,
        expandIcons: !0,
        onItemClick: me,
        onExpandChange: ge,
        size: y,
        item: o.item,
        dir: k,
        animate: b.animate
      }
    ) : /* @__PURE__ */ t.createElement(ye, null, ae.toLanguageString(j, re[j]))))));
  }, Je = t.useCallback(
    (e) => {
      for (const a of e)
        Be(a.target.clientWidth);
    },
    []
  ), he = t.useMemo(
    () => C || !L ? T : ot(
      T,
      K,
      (e) => rt(
        e,
        K,
        { [z]: De(e, v, N) }
      )
    ),
    [T, v, C, L, z, K]
  ), ye = o.listNoData || ft, Qe = o.valueHolder || wt, ae = st(), Ee = !Pe || ee.valid, { size: y, rounded: B, fillMode: W } = o, Ce = /* @__PURE__ */ t.createElement(t.Fragment, null, /* @__PURE__ */ t.createElement(
    "span",
    {
      className: oe("k-dropdowntree k-picker", o.className, {
        [`k-picker-${Ct[y] || y}`]: y,
        [`k-rounded-${kt[B] || B}`]: B,
        [`k-picker-${W}`]: W,
        "k-focus": d,
        "k-invalid": !Ee,
        "k-loading": o.loading,
        "k-required": Q,
        "k-disabled": o.disabled
      }),
      tabIndex: X,
      accessKey: o.accessKey,
      id: le,
      style: O ? { ...P, width: void 0 } : P,
      dir: k,
      ref: m,
      onKeyDown: I ? void 0 : ze,
      onMouseDown: je,
      onClick: I ? void 0 : Ae,
      onFocus: $e,
      onBlur: Ue,
      role: "combobox",
      "aria-haspopup": "tree",
      "aria-expanded": l,
      "aria-disabled": I,
      "aria-label": O,
      "aria-labelledby": o.ariaLabelledBy,
      "aria-describedby": o.ariaDescribedBy,
      "aria-required": Q
    },
    /* @__PURE__ */ t.createElement("span", { className: "k-input-inner" }, (Z || J) && /* @__PURE__ */ t.createElement(Qe, { item: v }, Z || J)),
    o.loading && /* @__PURE__ */ t.createElement(we, { className: "k-input-loading-icon", name: "loading" }),
    L && !I && /* @__PURE__ */ t.createElement(
      "span",
      {
        onClick: ve,
        className: "k-clear-value",
        title: ae.toLanguageString(Ie, re[Ie]),
        role: "button",
        tabIndex: -1,
        onMouseDown: (e) => e.preventDefault()
      },
      /* @__PURE__ */ t.createElement(we, { name: "x", icon: gt })
    ),
    /* @__PURE__ */ t.createElement(
      vt,
      {
        tabIndex: -1,
        type: "button",
        "aria-label": "select",
        className: "k-input-button",
        size: y,
        fillMode: W,
        themeColor: "base",
        rounded: null,
        icon: "caret-alt-down",
        svgIcon: bt
      }
    ),
    /* @__PURE__ */ t.createElement(
      "select",
      {
        name: Te,
        ref: _,
        tabIndex: -1,
        "aria-hidden": !0,
        title: O,
        style: { opacity: 0, width: 1, border: 0, zIndex: -1, position: "absolute", left: "50%" }
      },
      /* @__PURE__ */ t.createElement("option", { value: o.valueMap ? o.valueMap.call(void 0, v) : v })
    ),
    !x && /* @__PURE__ */ t.createElement(
      lt,
      {
        ...b,
        className: oe(b.className, { "k-rtl": k === "rtl" }),
        popupClass: oe(b.popupClass, "k-dropdowntree-popup k-list-container"),
        style: Ke,
        anchor: b.anchor || m.current,
        show: l,
        onOpen: He,
        onClose: _e
      },
      o.filterable && /* @__PURE__ */ t.createElement(
        Se,
        {
          value: o.filter === void 0 ? ue : o.filter,
          ref: S,
          onChange: be,
          onKeyDown: pe,
          size: y,
          rounded: B,
          fillMode: W,
          renderListFilterWrapper: !0,
          renderPrefixSeparator: !0
        }
      ),
      T.length > 0 ? /* @__PURE__ */ t.createElement(
        Fe,
        {
          style: { height: b.height },
          ref: h,
          tabIndex: X,
          data: he,
          focusIdField: N,
          textField: o.textField,
          selectField: z,
          expandField: o.expandField,
          childrenField: K,
          expandIcons: !0,
          onItemClick: me,
          onExpandChange: ge,
          size: y,
          item: o.item,
          dir: k,
          animate: b.animate
        }
      ) : /* @__PURE__ */ t.createElement(ye, null, ae.toLanguageString(j, re[j]))
    )
  ), x && Ge());
  return O ? /* @__PURE__ */ t.createElement(
    mt,
    {
      label: O,
      editorValue: Z,
      editorPlaceholder: J,
      editorValid: Ee,
      editorDisabled: I,
      editorId: le,
      style: { width: P ? P.width : void 0 },
      children: Ce,
      dir: k
    }
  ) : Ce;
}), It = {
  opened: n.bool,
  disabled: n.bool,
  dir: n.string,
  tabIndex: n.number,
  accessKey: n.string,
  data: n.array,
  value: n.any,
  valueMap: n.func,
  placeholder: n.string,
  dataItemKey: n.string.isRequired,
  textField: n.string.isRequired,
  selectField: n.string,
  expandField: n.string,
  subItemsField: n.string,
  className: n.string,
  style: n.object,
  label: n.string,
  validationMessage: n.string,
  validityStyles: n.bool,
  valid: n.bool,
  required: n.bool,
  name: n.string,
  id: n.string,
  ariaLabelledBy: n.string,
  ariaDescribedBy: n.string,
  filterable: n.bool,
  filter: n.string,
  loading: n.bool,
  popupSettings: n.shape({
    animate: n.oneOfType([n.bool, n.shape({
      openDuration: n.number,
      closeDuration: n.number
    })]),
    popupClass: n.string,
    className: n.string,
    appendTo: n.any,
    width: n.oneOfType([n.string, n.number]),
    height: n.oneOfType([n.string, n.number])
  }),
  onOpen: n.func,
  onClose: n.func,
  onFocus: n.func,
  onBlur: n.func,
  onChange: n.func,
  onFilterChange: n.func,
  onExpandChange: n.func,
  item: n.func,
  valueHolder: n.func,
  listNoData: n.func,
  adaptiveTitle: n.string,
  adaptive: n.bool
};
Re.displayName = "KendoReactDropDownTree";
Re.propTypes = It;
export {
  Re as DropDownTree,
  Dt as DropDownTreePropsContext
};
