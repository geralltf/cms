/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as r from "react";
import { normalize as L } from "../interfaces/GridSortSettings.mjs";
import { ColumnDraggable as O } from "../drag/ColumnDraggable.mjs";
import { GridHeaderCell as P } from "./GridHeaderCell.mjs";
import { classNames as V, Keys as f, IconWrap as W } from "@progress/kendo-react-common";
import { ColumnResizer as q, HeaderThElement as B } from "@progress/kendo-react-data-tools";
import { useLocalization as T } from "@progress/kendo-react-intl";
import { sortAriaLabel as M, messages as U } from "../messages/index.mjs";
import { sortAscSmallIcon as j, sortDescSmallIcon as J } from "@progress/kendo-svg-icons";
import { resolveCells as Q } from "../utils/index.mjs";
const X = {
  true: { asc: "desc", desc: "", "": "asc" },
  false: { asc: "desc", desc: "asc", "": "asc" }
}, Y = {
  none: "none",
  asc: "ascending",
  desc: "descending"
}, re = (e) => {
  const [z, b] = r.useState(), H = T(), u = r.useRef(null);
  let D = 0, E = -1;
  const k = (t, n) => {
    if (t.preventDefault(), !e.sortChange)
      return;
    const { allowUnsort: l, mode: c } = L(e.sortable || !1, n.sortable || !1), o = (e.sort || []).filter((i) => i.field === n.field)[0], d = X[l][o && o.dir || ""], s = c === "single" ? [] : (e.sort || []).filter((i) => i.field !== n.field);
    d !== "" && n.field && s.push({ field: n.field, dir: d }), e.sortChange(s, t);
  }, I = (t, n) => {
    if (t.isDefaultPrevented())
      return;
    const { keyCode: l, metaKey: c, ctrlKey: o, altKey: d } = t, s = e.sortable && n.sortable, i = t.target;
    if (s && t.keyCode === f.enter && i.className.indexOf("k-table-th") !== -1 && k(t, n), e.navigatable) {
      if (e.groupable && (c && l === f.enter || o && l === f.space)) {
        t.preventDefault();
        const m = e.columns.findIndex((g) => g.field === n.field);
        e.columnGroupChange && e.columnGroupChange(m, t);
      }
      d && l === f.down && (t.preventDefault(), b(n.field), u.current = i);
    }
  }, x = () => {
    b(void 0), u.current && u.current.getAttribute("tabindex") !== "-1" && u.current.focus();
  }, v = (t) => e.sort ? t >= 0 && [
    /* @__PURE__ */ r.createElement("span", { key: 1, className: "k-sort-icon" }, /* @__PURE__ */ r.createElement(
      W,
      {
        name: "sort-" + e.sort[t].dir + "-small",
        icon: e.sort[t].dir === "asc" ? j : J
      }
    )),
    e.sort.length > 1 && /* @__PURE__ */ r.createElement("span", { key: 2, className: "k-sort-icon" }, /* @__PURE__ */ r.createElement("span", { className: "k-sort-order" }, t + 1))
  ] : null, y = (t) => t.map((n) => {
    const l = e.columns[n], c = e.sortable && l.sortable, o = e.sort ? e.sort.findIndex((a) => a.field === l.field) : -1, d = o >= 0 && e.sort[o].dir || "none", s = l.columnMenu === null ? null : l.columnMenu || e.columnMenu, i = l.menuIcon || e.columnMenuIcon, m = V({
      "k-first": l.kFirst,
      "k-filterable": !!s,
      "k-table-th": !0,
      "k-header": !0,
      "k-grid-header-sticky": l.locked,
      "k-sorted": e.sort && e.sort.some((a) => a.field === l.field)
    }, l.headerClassName);
    l.locked === !1 && (l.left = 0);
    const g = l.left !== void 0 ? e.isRtl ? { left: l.right, right: l.left } : { left: l.left, right: l.right } : {}, N = H.toLanguageString(M, U[M]), K = l.isAccessible ? {
      ariaSort: Y[d],
      role: "columnheader",
      ariaColumnIndex: l.ariaColumnIndex,
      ariaSelected: !1,
      ariaDescription: c ? N : ""
    } : {
      role: "presentation"
    }, h = l.declarationIndex >= 0 ? ++E : --D, A = l.headerCell ? l.headerCell : P, R = /* @__PURE__ */ r.createElement(
      A,
      {
        key: 1,
        field: l.field,
        onClick: c && ((a) => k(a, l)) || void 0,
        selectionChange: e.selectionChange,
        title: l.title,
        selectionValue: l.headerSelectionValue,
        render: e.cellRender,
        children: v(o),
        columnMenuWrapperProps: {
          column: {
            field: l.field,
            title: l.title,
            locked: l.locked,
            filter: l.filter,
            id: l.id
          },
          sortable: c && e.sortable,
          sort: e.sort,
          onSortChange: e.sortChange,
          filter: e.filter,
          filterable: e.filterable && l.filterable,
          filterOperators: e.filterOperators,
          onFilterChange: e.filterChange,
          show: z === l.field ? !0 : void 0,
          onCloseMenu: x,
          navigatable: e.navigatable,
          group: e.group,
          groupable: e.groupable,
          onGroupChange: e.groupChange,
          columnMenu: s,
          columnMenuIcon: i
        }
      }
    ), S = {
      ...K,
      key: h,
      colSpan: l.colSpan,
      rowSpan: l.rowSpan,
      className: m,
      style: g,
      columnId: l.id,
      navigatable: l.navigatable,
      onKeyDown: (a) => I(a, l),
      role: "columnheader"
    }, w = [
      R,
      e.columnResize && e.columnResize.resizable && l.resizable && /* @__PURE__ */ r.createElement(
        q,
        {
          key: 2,
          resize: (a, F, G) => e.columnResize && e.columnResize.dragHandler(a, l, F, G),
          autofit: (a) => e.columnResize && e.columnResize.dblClickHandler(a, [l.id])
        }
      )
    ], C = Q(e.cells, l.cells);
    if (C && C.headerCell) {
      const a = C.headerCell;
      return /* @__PURE__ */ r.createElement(a, { ...R.props, key: h, thProps: S, index: n }, w);
    }
    return /* @__PURE__ */ r.createElement(
      B,
      {
        ...S,
        key: h
      },
      w
    );
  });
  return e.columnsMap.map((t, n) => e.pressHandler && /* @__PURE__ */ r.createElement(
    O,
    {
      key: n,
      pressHandler: e.pressHandler,
      dragHandler: e.dragHandler,
      releaseHandler: e.releaseHandler,
      ariaRowIndex: n + 1,
      dragClue: e.dragClue,
      headerRef: e.headerRef,
      containerRef: e.containerRef
    },
    y(t)
  ) || /* @__PURE__ */ r.createElement("tr", { key: n, className: "k-table-row", role: "row", "aria-rowindex": n + 1 }, y(t)));
};
export {
  re as HeaderRow
};
