/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as t from "react";
import l from "prop-types";
import { DrawerContext as G } from "./context/DrawerContext.mjs";
import { DrawerItem as J } from "./DrawerItem.mjs";
import { validatePackage as Q, shouldShowValidationUI as Y, classNames as h, Navigation as Z, WatermarkOverlay as ee } from "@progress/kendo-react-common";
import { packageMetadata as E } from "../package-metadata.mjs";
const te = 240, ae = 50, re = { type: "slide", duration: 200 }, ne = { type: "slide", duration: 0 }, T = t.forwardRef((g, W) => {
  const { children: x, className: A, style: p } = g;
  Q(E);
  const C = Y(E), {
    animation: m,
    expanded: d,
    mode: c,
    position: o,
    onOverlayClick: O,
    mini: s,
    dir: v,
    width: y,
    miniWidth: w,
    items: f,
    item: M,
    onSelect: P
  } = t.useContext(G), i = t.useRef(null), _ = t.useCallback(
    () => {
      i.current && i.current.focus();
    },
    []
  ), e = typeof m != "boolean" ? m : m === !1 ? ne : re, k = y || te, N = w || ae;
  t.useImperativeHandle(W, () => ({
    element: i.current,
    focus: _
  }));
  const L = t.useMemo(
    () => "k-drawer " + h(
      {
        "k-drawer-start": o === "start",
        "k-drawer-end": o === "end"
      },
      A
    ),
    [o]
  ), R = {
    opacity: 1,
    flexBasis: k,
    WebkitTransition: "all " + (e && e.duration) + "ms",
    /* Safari */
    transition: "all " + (e && e.duration) + "ms"
  }, U = {
    opacity: 1,
    transform: "translateX(0px)",
    WebkitTransition: "all " + (e && e.duration) + "ms",
    /* Safari */
    transition: "all " + (e && e.duration) + "ms"
  }, X = {
    opacity: s ? 1 : 0,
    flexBasis: s ? N : 0,
    WebkitTransition: "all " + (e && e.duration) + "ms",
    /* Safari */
    transition: "all " + (e && e.duration) + "ms"
  }, F = {
    opacity: 0,
    transform: "translateX(-100%)",
    WebkitTransition: "all " + (e && e.duration) + "ms",
    /* Safari */
    transition: "all " + (e && e.duration) + "ms"
  }, H = {
    opacity: 0,
    transform: "translateX(100%)",
    WebkitTransition: "all " + (e && e.duration) + "ms",
    /* Safari */
    transition: "all " + (e && e.duration) + "ms"
  }, b = {
    transform: "translateX(0%)",
    WebkitTransitionDuration: (e && e.duration) + "ms",
    /* Safari */
    transitionDuration: (e && e.duration) + "ms"
  }, K = d ? c === "push" ? R : U : c === "push" ? X : v === "ltr" && o === "start" || v === "rtl" && o === "end" ? s ? b : F : s ? b : H, D = t.useMemo(
    () => new Z({
      root: i,
      selectors: ["ul.k-drawer-items li.k-drawer-item:not(.k-drawer-separator)"],
      keyboardEvents: {
        keydown: {
          ArrowDown: (a, r, n) => {
            n.preventDefault(), r.focusNext(a);
          },
          ArrowUp: (a, r, n) => {
            n.preventDefault(), r.focusPrevious(a);
          },
          Enter: (a, r, n) => {
            n.preventDefault(), a.click();
          }
        }
      },
      tabIndex: 0,
      rovingTabIndex: !0
    }),
    []
  ), S = t.useCallback(
    D.triggerKeyboardEvent.bind(D),
    []
  ), B = f && /* @__PURE__ */ t.createElement(
    "ul",
    {
      className: "k-drawer-items",
      role: "menubar",
      "aria-orientation": "vertical",
      onKeyDown: S
    },
    f.map(
      (a, r) => {
        const { className: n, level: u, ...j } = a, V = u != null ? u : 0, $ = h(
          n,
          s ? "" : `k-level-${V}`
        ), q = {
          index: r,
          className: $,
          ...j,
          onSelect: P
        }, z = M || J;
        return /* @__PURE__ */ t.createElement(z, { key: r, ...q });
      }
    )
  ), I = /* @__PURE__ */ t.createElement(
    "div",
    {
      style: e ? { ...K, ...p } : p,
      className: L,
      ref: i
    },
    /* @__PURE__ */ t.createElement(
      "div",
      {
        className: "k-drawer-wrapper",
        style: !d && s && c === "overlay" ? { width: N } : { width: k }
      },
      B || x
    ),
    C && /* @__PURE__ */ t.createElement(ee, null)
  );
  return c === "overlay" ? /* @__PURE__ */ t.createElement(t.Fragment, null, d && /* @__PURE__ */ t.createElement("div", { className: "k-overlay", onClick: O }), I) : I;
});
T.propTypes = {
  children: l.any,
  className: l.string,
  style: l.object,
  item: l.any,
  tabIndex: l.number
};
T.displayName = "KendoDrawerNavigation";
export {
  T as DrawerNavigation
};
