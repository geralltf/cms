/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as t from "react";
import e from "prop-types";
import { DrawerContext as W } from "./context/DrawerContext.mjs";
import { DrawerNavigation as O } from "./DrawerNavigation.mjs";
import { validatePackage as T, useDir as j, classNames as H } from "@progress/kendo-react-common";
import { packageMetadata as K } from "../package-metadata.mjs";
const c = t.forwardRef((p, u) => {
  T(K);
  const {
    expanded: a = i.expanded,
    mode: o = i.mode,
    position: f = i.position,
    className: v,
    children: w,
    style: h,
    animation: y = i.animation,
    mini: l = i.mini,
    width: b = i.width,
    miniWidth: k = i.miniWidth,
    dir: x = i.dir,
    items: r,
    item: g,
    tabIndex: E,
    onOverlayClick: N,
    onSelect: s
  } = p, n = t.useRef(null), C = t.useCallback(
    () => {
      n.current && n.current.focus();
    },
    []
  );
  t.useImperativeHandle(u, () => ({
    element: n.current,
    focus: C
  }));
  const D = t.useCallback(
    (P, R, d) => {
      if (r && s) {
        const S = {
          itemTarget: P,
          itemIndex: R,
          syntheticEvent: d,
          nativeEvent: d && d.nativeEvent,
          target: void 0
        };
        s.call(void 0, S);
      }
    },
    [r, s]
  ), m = j(n, x), I = H(
    {
      "k-drawer-container": !0,
      "k-drawer-expanded": a,
      "k-drawer-overlay": o === "overlay",
      "k-drawer-push": o === "push",
      "k-drawer-mini": l && !a
    },
    v
  );
  return /* @__PURE__ */ t.createElement(
    W.Provider,
    {
      value: {
        animation: y,
        expanded: a,
        mode: o,
        position: f,
        mini: l,
        dir: m,
        items: r,
        item: g,
        width: b,
        miniWidth: k,
        onOverlayClick: N,
        onSelect: D
      }
    },
    /* @__PURE__ */ t.createElement(
      "div",
      {
        className: I,
        ref: n,
        dir: m,
        style: h,
        tabIndex: E
      },
      r && /* @__PURE__ */ t.createElement(O, null),
      w
    )
  );
});
c.propTypes = {
  animation: e.any,
  expanded: e.bool,
  children: e.any,
  className: e.string,
  dir: e.string,
  mode: e.string,
  position: e.string,
  mini: e.bool,
  style: e.object,
  tabIndex: e.number,
  width: e.number,
  miniWidth: e.number,
  selected: e.number,
  onSelect: e.func,
  onOverlayClick: e.func
};
const i = {
  animation: !0,
  expanded: !1,
  mode: "overlay",
  position: "start",
  mini: !1,
  dir: "ltr",
  width: 240,
  miniWidth: 48
};
c.displayName = "KendoDrawer";
export {
  c as Drawer
};
