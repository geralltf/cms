/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as t from "react";
import { PanelBarItem as i } from "./PanelBarItem.mjs";
const y = (n) => typeof n != "object" || !("type" in n) || n.type !== i, I = ({
  animation: n = !0,
  keepItemsMounted: r = !1,
  state: e,
  expanded: o,
  handleSelect: f,
  children: p,
  parentExpanded: u = !0,
  level: a = 0,
  parentPrivateKey: c = []
}) => {
  const m = t.Children.toArray(p).filter(y), C = m.length ? m : p;
  return t.Children.map(C, (s, E) => {
    if (s && s.type === i) {
      let g;
      const d = l(s, c, E);
      if (s.props.children) {
        const b = {
          animation: n,
          keepItemsMounted: r,
          state: e,
          expanded: o,
          handleSelect: f,
          children: s.props.children,
          parentExpanded: (o || []).indexOf(d) > -1,
          level: a + 1,
          parentPrivateKey: [...c, d]
        };
        g = I(b);
      }
      return t.cloneElement(
        s,
        {
          ...s.props,
          animation: s.props.animation !== void 0 ? s.props.animation : n,
          keepItemsMounted: r,
          id: s.props.id || `k-panelbar-item-default-${d}`,
          uniquePrivateKey: d,
          parentUniquePrivateKey: c,
          parentExpanded: u,
          level: a,
          expanded: (o || []).indexOf(d) > -1,
          focused: e.focused === d && e.wrapperFocused,
          selected: e.selected === d,
          children: g,
          onSelect: f
        }
      );
    } else
      return /* @__PURE__ */ t.createElement("div", { className: "k-panelbar-content" }, s);
  });
}, w = (n) => {
  const r = t.Children.toArray(n.children)[0];
  return r ? l(r, [], 0) : "";
}, v = (n, r, e = {
  expanded: n.expanded || [],
  selected: n.selected || "",
  focused: n.focused || "",
  wrapperFocused: !1
}, o = !0, f = []) => (t.Children.map(n.children, (p, u) => {
  if (p && p.type === i) {
    const a = l(p, f, u);
    !p.props.disabled && o && (p.props.selected && (e.selected = a), p.props.focused && (e.focused = a), p.props.expanded && (r === "multiple" ? e.expanded.push(a) : r === "single" && (e.expanded = [a])), p.props.children && (e = v(
      p.props,
      r,
      e,
      !!p.props.expanded,
      [...f, a]
    )));
  }
}), e), l = (n, r, e) => n && n.props && n.props.id ? n.props.id : r.length ? r[r.length - 1] + `.${e}` : `.${e}`;
function q(n, r = []) {
  return (n || []).forEach((e) => {
    e.disabled || (r.push(e), e.expanded && e.children && q(e.children, r));
  }), r;
}
function F(n, r = []) {
  return t.Children.forEach(n, (e) => {
    e && e.props && !e.props.disabled && (r.push(e), e.props.children && F(e.props.children, r));
  }), r;
}
function $(n, r = []) {
  return t.Children.forEach(n, (e) => {
    e && e.props && !e.props.disabled && (e.props.expanded || e.props.parentExpanded) && (r.push(e), e.props.children && $(e.props.children, r));
  }), r;
}
const A = (n) => n != null;
var x;
((n) => {
  function r(e) {
    return e.map((o, f) => {
      let p;
      return o.content && (p = o.content), o.children && (p = r(o.children)), /* @__PURE__ */ t.createElement(
        i,
        {
          ...o,
          children: p,
          key: o.id || f
        }
      );
    });
  }
  n.mapItemsToComponents = r;
})(x || (x = {}));
const B = (n, r) => n.length !== r.length ? !1 : n.every((e, o) => e === r[o]);
export {
  x as PanelBarUtils,
  F as flatChildren,
  $ as flatVisibleChildren,
  q as flatVisibleItems,
  w as getFirstId,
  v as getInitialState,
  B as isArrayEqual,
  A as isPresent,
  I as renderChildren
};
