/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as i from "react";
import t from "prop-types";
import { classNames as b } from "@progress/kendo-react-common";
const o = class o extends i.Component {
  constructor() {
    super(...arguments), this.itemRef = null, this.focus = () => {
      this.itemRef && this.itemRef.focus();
    }, this.blur = () => {
      this.itemRef && this.itemRef.blur();
    }, this.onClick = () => {
      this.props.onSelect && this.props.onSelect(this.props.index), this.itemRef && (this.itemRef.tabIndex = 0, this.itemRef.focus());
    };
  }
  /**
   * @hidden
   */
  render() {
    const { id: c, active: e, disabled: s, title: a = "Untitled", index: n, renderAllContent: p, first: f, last: m } = this.props, l = p ? `${this.props.contentPanelId}-${n.toString()}` : this.props.contentPanelId, d = {
      id: `${c}-${n.toString()}`,
      "aria-selected": e,
      "aria-controls": e ? l : void 0,
      "aria-disabled": s,
      role: "tab",
      onClick: s ? void 0 : this.onClick
    }, h = b("k-item", "k-tabstrip-item", {
      "k-disabled": s,
      "k-active": e,
      "k-first": f,
      "k-last": m
    });
    return /* @__PURE__ */ i.createElement(
      "li",
      {
        ...d,
        className: h,
        ref: (u) => this.itemRef = u,
        onBlur: this.blur,
        "aria-controls": l
      },
      /* @__PURE__ */ i.createElement("span", { className: "k-link" }, a)
    );
  }
};
o.propTypes = {
  active: t.bool,
  disabled: t.bool,
  index: t.number,
  onSelect: t.func,
  title: t.oneOfType([
    t.string,
    t.element
  ]),
  first: t.bool,
  last: t.bool
};
let r = o;
export {
  r as TabStripNavigationItem
};
