/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as t from "react";
import o from "prop-types";
import { validatePackage as T, focusFirstFocusableChild as $, useId as B, useDir as P, classNames as _, dispatchEvent as S, Keys as w } from "@progress/kendo-react-common";
import { packageMetadata as L } from "../package-metadata.mjs";
import { POSITION_MODE_CLASSES as A, ITEM_FLOW_CLASSES as H } from "./models/utils.mjs";
import { BottomNavigationItem as j } from "./BottomNavigationItem.mjs";
const I = t.forwardRef((a, p) => {
  T(L);
  const i = t.useRef(null), b = t.useCallback(
    () => {
      i.current && $(i.current);
    },
    []
  ), c = t.useCallback(
    () => ({
      element: i.current,
      focus: b
    }),
    [b]
  );
  t.useImperativeHandle(p, c);
  const {
    positionMode: v = n.positionMode,
    itemFlow: k = n.itemFlow,
    border: C = n.border,
    className: M,
    items: r,
    item: E,
    itemRender: N,
    disabled: m,
    style: O,
    id: y,
    onSelect: f,
    onKeyDown: h
  } = a, g = B(), F = P(i, a.dir), s = t.useMemo(
    () => a.fillMode === null || a.fill === null ? null : a.fill || a.fillMode || n.fillMode,
    [a.fillMode, a.fill]
  ), u = t.useMemo(
    () => a.themeColor || n.themeColor,
    [a.themeColor]
  ), D = t.useMemo(
    () => _(
      "k-bottom-nav",
      A[v],
      H[k],
      {
        [`k-bottom-nav-${s}`]: s,
        [`k-bottom-nav-${s}-${u}`]: !!(s && u),
        "k-bottom-nav-border": C,
        "k-disabled": m
      },
      M
    ),
    [v, u, s, k, C, m, M]
  ), d = t.useCallback(
    (e, l) => {
      r && !r[l].disabled && f && S(
        f,
        e,
        c(),
        {
          itemTarget: r[l],
          itemIndex: l
        }
      );
    },
    [r, f]
  ), R = t.useCallback(
    (e, l) => {
      d(e, l);
    },
    [d]
  ), K = t.useCallback(
    (e, l) => {
      switch (e.keyCode) {
        case w.enter:
        case w.space:
          d(e, l), e.preventDefault();
          break;
      }
      S(
        h,
        e,
        c(),
        void 0
      );
    },
    [d, h]
  );
  return /* @__PURE__ */ t.createElement(
    "nav",
    {
      ref: i,
      className: D,
      style: O,
      id: y || g,
      dir: F
    },
    r && r.map((e, l) => /* @__PURE__ */ t.createElement(
      j,
      {
        ...e,
        key: l,
        index: l,
        id: `${y || g}-${l}`,
        disabled: m || e.disabled,
        selected: e.selected,
        dataItem: e,
        item: E,
        render: N,
        onSelect: R,
        onKeyDown: K
      }
    ))
  );
}), n = {
  themeColor: "primary",
  fillMode: "flat",
  itemFlow: "vertical",
  positionMode: "fixed",
  border: !0
};
I.propTypes = {
  className: o.string,
  style: o.object,
  id: o.string,
  dir: o.string,
  themeColor: o.oneOf([
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
    "inverse"
  ]),
  fill: o.oneOf(["solid", "flat"]),
  fillMode: o.oneOf(["solid", "flat"]),
  itemFlow: o.oneOf(["vertical", "horizontal"]),
  border: o.bool,
  disabled: o.bool,
  selected: o.number,
  onSelect: o.func
};
I.displayName = "KendoReactBottomNavigation";
export {
  I as BottomNavigation
};
