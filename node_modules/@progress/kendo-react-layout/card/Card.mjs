/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as e from "react";
import r from "prop-types";
import { validatePackage as v, classNames as T } from "@progress/kendo-react-common";
import { cardType as s, cardOrientation as l } from "./interfaces/Enums.mjs";
import { packageMetadata as g } from "../package-metadata.mjs";
const d = e.forwardRef((t, p) => {
  v(g);
  const {
    children: m,
    dir: f,
    style: u,
    className: y,
    type: a = c.type,
    orientation: o = c.orientation,
    ...R
  } = t, n = e.useRef(null), i = e.useRef(null);
  return e.useImperativeHandle(n, () => ({
    element: i.current,
    props: t
  })), e.useImperativeHandle(p, () => n.current), /* @__PURE__ */ e.createElement(
    "div",
    {
      dir: f,
      style: u,
      ref: i,
      className: T(
        "k-card",
        y,
        { [`k-card-${a}`]: a !== s.DEFAULT },
        o === null ? void 0 : o !== l.HORIZONTAL ? "k-card-vertical" : "k-card-horizontal"
      ),
      ...R
    },
    m
  );
});
d.displayName = "KendoReactCard";
d.propTypes = {
  children: r.node,
  className: r.string,
  dir: r.string,
  orientation: r.oneOf(["horizontal", "vertical"]),
  style: r.object,
  type: r.oneOf(["default", "primary", "info", "success", "warning", "error"])
};
const c = {
  type: s.DEFAULT,
  orientation: l.VERTICAL
};
export {
  d as Card
};
