/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as g from "react";
import * as n from "react-dom/server";
const d = (t, e, r) => (l) => {
  r(e, l);
  const s = n.renderToStaticMarkup(/* @__PURE__ */ g.createElement(t, { ...e })), i = Number(s);
  return isNaN(i) ? s : i;
}, f = (t, e) => {
  t.$implicit = t.group = e, t.field = e.field, t.value = e.value, t.aggregates = e.aggregates;
}, u = (t, e) => {
  t.group = e.group, t.$implicit = t.aggregates = e;
}, C = (t, e) => {
}, c = (t) => {
  const e = [];
  let r = 0;
  const p = (l, s, i) => {
    l.forEach((o) => {
      if (o.level === i) {
        const a = new O(o, r);
        if (s.push(a), o.children && o.children.length > 1) {
          const h = a.columns = [];
          p(o.children, h, i + 1);
        } else
          r++;
      }
    });
  };
  return p(t, e, 0), e;
};
class O {
  constructor(e, r) {
    this.columns = null, this.title = e.title, this.field = e.field, this.hidden = e.hidden, this.locked = e.locked, this.width = e.width, this.headerCellOptions = e.headerCellOptions, this.cellOptions = e.cellOptions, this.groupHeaderCellOptions = e.groupHeaderCellOptions, this.groupFooterCellOptions = e.groupFooterCellOptions, this.footerCellOptions = e.footerCellOptions, e.footer && (this.footerTemplate = d(e.footer, {
      $implicit: e,
      column: e,
      columnIndex: r
    }, C)), e.groupFooter && (this.groupFooterTemplate = d(e.groupFooter, {
      column: e,
      field: e.field
    }, u)), e.groupHeader && (this.groupHeaderTemplate = d(e.groupHeader, {}, f));
  }
}
export {
  O as ExporterColumn,
  c as toExporterColumns
};
