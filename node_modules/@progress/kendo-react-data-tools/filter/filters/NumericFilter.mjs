/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as i from "react";
import a from "prop-types";
import { NumericTextBox as c } from "@progress/kendo-react-inputs";
import { provideLocalizationService as m, registerForLocalization as u } from "@progress/kendo-react-intl";
import { filterNumericFilterAriaLabel as n, messages as h } from "../../messages/index.mjs";
const t = class t extends i.Component {
  constructor() {
    super(...arguments), this.onChange = (e) => {
      this.props.onFilterChange.call(void 0, {
        nextFilter: { ...this.props.filter, value: e.value }
      });
    };
  }
  /**
   * @hidden
   */
  render() {
    const e = m(this), {
      min: s,
      max: l,
      filter: o,
      ariaLabel: p = e.toLanguageString(n, h[n])
    } = this.props;
    return /* @__PURE__ */ i.createElement(
      c,
      {
        value: typeof o.value == "number" ? o.value : null,
        onChange: this.onChange,
        ariaLabel: p,
        min: s,
        max: l
      }
    );
  }
};
t.propTypes = {
  filter: a.object.isRequired,
  onFilterChange: a.func.isRequired
};
let r = t;
u(r);
export {
  r as NumericFilter
};
