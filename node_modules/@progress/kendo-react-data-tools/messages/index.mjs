/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
const e = "pager.info", t = "pager.firstPage", r = "pager.previousPage", o = "pager.nextPage", n = "pager.lastPage", l = "pager.itemsPerPage", a = "pager.pageSelection", i = "pager.page", s = "pager.of", u = "pager.totalPages", p = "pager.pageNumberLabel", c = "pager.pageLabel", f = "pager.ariaKeyshortcuts", g = "pager.ariaLabel", O = "pager.pageSizeAriaLabel", m = "pager.mobileSelect", M = "pager.moreButtonLabel", I = "filter.eqOperator", b = "filter.notEqOperator", L = "filter.isNullOperator", F = "filter.isNotNullOperator", d = "filter.isEmptyOperator", A = "filter.isNotEmptyOperator", E = "filter.startsWithOperator", q = "filter.containsOperator", h = "filter.notContainsOperator", N = "filter.endsWithOperator", P = "filter.gteOperator", S = "filter.gtOperator", x = "filter.lteOperator", w = "filter.ltOperator", y = "filter.isTrue", G = "filter.isFalse", C = "filter.afterOrEqualOperator", B = "filter.afterOperator", D = "filter.beforeOperator", T = "filter.beforeOrEqualOperator", W = "filter.andLogic", v = "filter.orLogic", z = "filter.addExpression", K = "filter.addGroup", R = "filter.close", j = "filter.groupAriaLabel", k = "filter.expressionAriaLabel", H = "filter.expressionDropdownAriaLabel", J = "filter.expressionOperatorDropdownAriaLabel", Q = "filter.enumFilterDropdownAriaLabel", U = "filter.numericFilterAriaLabel", V = "filter.textFilterAriaLabel", X = "columnMenu.filterClearButton", Y = "columnMenu.filterSubmitButton", Z = "columnMenu.filterTitle", _ = "columnMenu.sortAscending", $ = "columnMenu.sortDescending", ee = "columnMenu.filterEqOperator", te = "columnMenu.filterNotEqOperator", re = "columnMenu.filterIsNullOperator", oe = "columnMenu.filterIsNotNullOperator", ne = "columnMenu.filterIsEmptyOperator", le = "columnMenu.filterIsNotEmptyOperator", ae = "columnMenu.filterStartsWithOperator", ie = "columnMenu.filterContainsOperator", se = "columnMenu.filterNotContainsOperator", ue = "columnMenu.filterEndsWithOperator", pe = "columnMenu.filterGteOperator", ce = "columnMenu.filterGtOperator", fe = "columnMenu.filterLteOperator", ge = "columnMenu.filterLtOperator", Oe = "columnMenu.filterIsTrue", me = "columnMenu.filterAfterOrEqualOperator", Me = "columnMenu.filterAfterOperator", Ie = "columnMenu.filterBeforeOperator", be = "columnMenu.filterBeforeOrEqualOperator", Le = "columnMenu.filterAndLogic", Fe = "columnMenu.filterOrLogic", de = "sort.ariaLabel", Ae = "filter.ariaLabel", Ee = {
  [l]: "items per page",
  [a]: "Select page",
  [e]: "{0} - {1} of {2} items",
  [t]: "Go to the first page",
  [r]: "Go to the previous page",
  [o]: "Go to the next page",
  [n]: "Go to the last page",
  [i]: "Page",
  [s]: "of",
  [u]: "{0}",
  [c]: "Page",
  [f]: "Enter ArrowRight ArrowLeft",
  [g]: "Pager",
  [O]: "Page size",
  [m]: "Select",
  [M]: "More pages",
  [p]: "Type a page number",
  [de]: "Sortable",
  [Ae]: "Filter",
  [I]: "Is equal to",
  [b]: "Is not equal to",
  [L]: "Is null",
  [F]: "Is not null",
  [d]: "Is empty",
  [A]: "Is not empty",
  [E]: "Starts with",
  [q]: "Contains",
  [h]: "Does not contain",
  [N]: "Ends with",
  [P]: "Is greater than or equal to",
  [S]: "Is greater than",
  [x]: "Is less than or equal to",
  [w]: "Is less than",
  [y]: "Is true",
  [G]: "Is false",
  [C]: "Is after or equal to",
  [B]: "Is after",
  [D]: "Is before",
  [T]: "Is before or equal to",
  [W]: "And",
  [v]: "Or",
  [z]: "Add Expression",
  [K]: "Add Group",
  [R]: "Remove",
  [j]: "Filter toolbar",
  [k]: "Filter expression row",
  [H]: "Filter dropdown",
  [J]: "Filter operator dropdown",
  [Q]: "Select True/False",
  [U]: "Enter number",
  [V]: "Enter text",
  [X]: "Clear",
  [Y]: "Filter",
  [Z]: "Filter",
  [_]: "Sort Ascending",
  [$]: "Sort Descending",
  [ee]: "Is equal to",
  [te]: "Is not equal to",
  [re]: "Is null",
  [oe]: "Is not null",
  [ne]: "Is empty",
  [le]: "Is not empty",
  [ae]: "Starts with",
  [ie]: "Contains",
  [se]: "Does not contain",
  [ue]: "Ends with",
  [pe]: "Is greater than or equal to",
  [ce]: "Is greater than",
  [fe]: "Is less than or equal to",
  [ge]: "Is less than",
  [Oe]: "Is true",
  [me]: "Is after or equal to",
  [Me]: "Is after",
  [Ie]: "Is before",
  [be]: "Is before or equal to",
  [Le]: "And",
  [Fe]: "Or"
};
export {
  Me as columnMenuFilterAfterOperator,
  me as columnMenuFilterAfterOrEqualOperator,
  Le as columnMenuFilterAndLogic,
  Ie as columnMenuFilterBeforeOperator,
  be as columnMenuFilterBeforeOrEqualOperator,
  X as columnMenuFilterClearButton,
  ie as columnMenuFilterContainsOperator,
  ue as columnMenuFilterEndsWithOperator,
  ee as columnMenuFilterEqOperator,
  ce as columnMenuFilterGtOperator,
  pe as columnMenuFilterGteOperator,
  ne as columnMenuFilterIsEmptyOperator,
  le as columnMenuFilterIsNotEmptyOperator,
  oe as columnMenuFilterIsNotNullOperator,
  re as columnMenuFilterIsNullOperator,
  Oe as columnMenuFilterIsTrue,
  ge as columnMenuFilterLtOperator,
  fe as columnMenuFilterLteOperator,
  se as columnMenuFilterNotContainsOperator,
  te as columnMenuFilterNotEqOperator,
  Fe as columnMenuFilterOrLogic,
  ae as columnMenuFilterStartsWithOperator,
  Y as columnMenuFilterSubmitButton,
  Z as columnMenuFilterTitle,
  _ as columnMenuSortAscending,
  $ as columnMenuSortDescending,
  z as filterAddExpression,
  K as filterAddGroup,
  B as filterAfterOperator,
  C as filterAfterOrEqualOperator,
  W as filterAndLogic,
  Ae as filterAriaLabel,
  D as filterBeforeOperator,
  T as filterBeforeOrEqualOperator,
  R as filterClose,
  q as filterContainsOperator,
  N as filterEndsWithOperator,
  Q as filterEnumFilterDropdownAriaLabel,
  I as filterEqOperator,
  k as filterExpressionAriaLabel,
  H as filterExpressionDropdownAriaLabel,
  J as filterExpressionOperatorDropdownAriaLabel,
  j as filterGroupAriaLabel,
  S as filterGtOperator,
  P as filterGteOperator,
  d as filterIsEmptyOperator,
  G as filterIsFalse,
  A as filterIsNotEmptyOperator,
  F as filterIsNotNullOperator,
  L as filterIsNullOperator,
  y as filterIsTrue,
  w as filterLtOperator,
  x as filterLteOperator,
  h as filterNotContainsOperator,
  b as filterNotEqOperator,
  U as filterNumericFilterAriaLabel,
  v as filterOrLogic,
  E as filterStartsWithOperator,
  V as filterTextFilterAriaLabel,
  Ee as messages,
  f as pagerAriaKeyshortcuts,
  g as pagerAriaLabel,
  t as pagerFirstPage,
  e as pagerInfo,
  l as pagerItemPerPage,
  n as pagerLastPage,
  m as pagerMobileSelect,
  M as pagerMoreButtonLabel,
  o as pagerNextPage,
  s as pagerOf,
  i as pagerPage,
  c as pagerPageLabel,
  p as pagerPageNumberLabel,
  a as pagerPageSelection,
  O as pagerPageSizeAriaLabel,
  r as pagerPreviousPage,
  u as pagerTotalPages,
  de as sortAriaLabel
};
