/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as s from "react";
import { HeaderThElement as h } from "./HeaderThElement.mjs";
import { getFilterColumnId as c } from "../navigation/utils.mjs";
import { useLocalization as k } from "@progress/kendo-react-intl";
import { filterAriaLabel as d, messages as C } from "../messages/index.mjs";
import { classNames as p } from "@progress/kendo-react-common";
const b = "k-table-row k-filter-row", w = (r, a, i) => {
  let t = `${i ? "k-grid-header-sticky" : ""}`;
  return r.some((l) => l.field === a) && (t += " k-sorted"), t;
}, F = function(r) {
  const { columns: a, filter: i, filterChange: t, sort: l = [], ariaRowIndex: n } = r, f = k();
  return /* @__PURE__ */ s.createElement("tr", { className: b, "aria-rowindex": n, role: "row" }, a.map((e, m) => {
    const g = e.locked !== void 0 ? {
      left: e.left,
      right: e.right,
      borderRightWidth: e.rightBorder ? "1px" : ""
    } : {}, o = e.filterCell || e.filter;
    return /* @__PURE__ */ s.createElement(
      h,
      {
        columnId: c(e.id),
        navigatable: e.navigatable,
        style: g,
        key: m,
        ariaColumnIndex: e.ariaColumnIndex,
        ariaLabel: o ? f.toLanguageString(d, C[d]) : void 0,
        className: p(
          "k-table-th k-header",
          w(l, e.field, e.locked)
        )
      },
      o && /* @__PURE__ */ s.createElement(
        o,
        {
          field: e.field,
          filter: i,
          onFilterChange: t
        }
      )
    );
  }));
};
export {
  b as FILTER_ROW_CLASS,
  F as FilterRow
};
